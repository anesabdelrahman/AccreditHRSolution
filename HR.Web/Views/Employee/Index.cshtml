@model X.PagedList.IPagedList<HR.Domain.Models.Employee>
@using X.PagedList.Mvc.Core

@{ ViewData["Title"] = "Index"; }

<h1>Employees List</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

@using (Html.BeginForm("Index", "Employee", FormMethod.Get))
{
<div class="form-actions no-color">
    <p>
        Find by Department or Status: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
        <input type="submit" value="Search" class="btn btn-default" /> |
        <a asp-action="Index">Back to Full List</a>
    </p>
</div>}


<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["FirstNameSortParm"]">@Html.DisplayNameFor(model => model.FirstOrDefault().FirstName)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["LastNameSortParm"]">@Html.DisplayNameFor(model => model.FirstOrDefault().LastName)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DobSortParm"]">@Html.DisplayNameFor(model => model.FirstOrDefault().DateOfBirth)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DepartmentSortParm"]">@Html.DisplayNameFor(model => model.FirstOrDefault().Department)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["StatusSortParm"]">@Html.DisplayNameFor(model => model.FirstOrDefault().EmployeeStatus)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["EmployeeNumSortParm"]">@Html.DisplayNameFor(model => model.FirstOrDefault().EmployeeNumber)</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
<tr>
    <td>
        @Html.DisplayFor(modelItem => item.FirstName)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.LastName)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.DateOfBirth)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Department)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.EmployeeStatus)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.EmployeeNumber)
    </td>
    <td>
        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
    </td>
</tr>
}
    </tbody>
</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, pageNumber => Url.Action("Index",
    new { pageNumber, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))